buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	//querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id "org.sonarqube" version "2.7"
}
\
group = 'com.zippyziggy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.6")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.jetbrains:annotations:23.0.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'


	// config
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

	// actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// AMQP
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'

	// Feign Client
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	// resilience4j
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

	// AWS
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// mySQL
	implementation 'com.mysql:mysql-connector-j:8.0.32'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"
	implementation 'com.google.code.findbugs:jsr305:3.0.2'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'

	// chatGpt
	implementation group: 'com.theokanning.openai-gpt3-java', name: 'client', version: '0.9.0'
	implementation 'io.github.flashvayne:chatgpt-spring-boot-starter:1.0.4'

	// zipkin, sleuth
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.cloud:spring-cloud-starter-zipkin:2.2.8.RELEASE'

	// monitoring
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// apache mahout - for recommendation
	implementation 'org.apache.mahout:mahout-integration:0.12.2'

	implementation 'com.sun.jersey.contribs:jersey-apache-client4:1.19.4'

	// logstash
	implementation 'net.logstash.logback:logstash-logback-encoder:6.6'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

// querydsl 세팅 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
// querydsl 세팅 끝